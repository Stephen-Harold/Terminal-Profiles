#!/bin/bash
# -= Windows License Key: RPCP7-N6BC2-FVW96-TYFPP-CKCKG =-
lastErrorValue=${1:-0}; # If Var $1 is not defined it's default will be 0.
function textDefault() {
# -= PROMPT: Preconfigured text snippets =-
# Catch return value before any other command executes
	local _rval=$1;
# unique terminal text colour configurations
	local _rndClr=$(( $RANDOM % 254 + 1 ));
	local _hostDecor=$(tput setaf 57);
	local 	_hostClr=$(tput setaf $_rndClr );
	local _pathDecor=$(tput setaf 74);
	local 	_pathClr=$(tput setaf 15);
	local  _shellClr=$(tput setaf $(( $_rndClr + 2 )));
# Home directory text with random colours for each character
	local _home=$( tput setaf $(( $RANDOM % 254 + 1 )); printf "H"; \
					tput setaf $(( $RANDOM % 254 + 1 )); printf "o"; \
					tput setaf $(( $RANDOM % 254 + 1 )); printf "m"; \
							tput setaf $(( $RANDOM % 254 + 1 )); printf "e"; \
					tput sgr0; );
# Current time in 24hr clock
	local _textTime="${BlueOnBlue}${UL}|$(date +%H:%M)|${LU}${RESET}";

# MacBook name
	local _textHost="%{${_hostDecor}${UL}${_hostClr}%}${HOSTNAME//\.*}%{${_hostDecor}${LU}${RESET}%}";

# Error text when return value isn't zero
	local _textError="%{${whiteOnRed}%}${UL}Error ${LU}%{${RESET}%}%{${redOnWhite}%}${UL} $_rval %{$LU$RESET%}";

# 'home' -OR- $PWD
	local _textPath=$([[ "$PWD" = "/Users/stephen-harold" ]] && \
		echo "%{${WHITE}%}('${_home}%{${WHITE}%}')%{${RESET}%}" || \
		echo "%{${_pathDecor}${UL}%}(%{${LU}${_pathClr}%}%2~%{${CYAN}%}/%{${_pathDecor}${UL}%})%{${LU}${RESET}%}");

#	local _textPath=$([[ "$PWD" = "/Users/stephen-harold" ]] && \
#	echo "%{${WHITE}%}('${_home}%{${WHITE}%}')%{${RESET}%}") || \
#	  				$([[ "$PWD" = "/" ]] && echo "%{${_pathDecor}${UL}%}(%{${LU}%{${WHITE}%}/%{${_pathDecor}${UL}%})%{${LU}${RESET}%}" || \
#  						echo "%{${_pathDecor}${UL}%}(%{${LU}${_pathClr}%}%2~%{${CYAN}%}/%{${_pathDecor}${UL}%})%{${LU}${RESET}%}");
# The current shell notification and insert point
	local _textShell=$( echo "%{${UL}${_shellClr}%}${SHELL//*\/}%{${LU}${RESET}${WHITE}%}:%{${RESET}%} " );

	printf "%s %s %s" "$([[ "$lastErrorValue" != 0 ]] && echo $_textError || echo $_textHost)" "$_textPath" "$_textShell";
}

# Print to PS1 definition in .zshrc
textDefault $lastErrorValue;
